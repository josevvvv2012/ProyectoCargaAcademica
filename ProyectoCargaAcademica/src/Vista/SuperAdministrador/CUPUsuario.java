/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.SuperAdministrador;

import Controlador.Conexion;
import Controlador.ControllerSql;
import Controlador.FuncionesController;
import Modelo.Perfil;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;

/**
 *
 * @author negro
 */
public class CUPUsuario extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    ControllerSql obj = new ControllerSql();
    FuncionesController cc = new FuncionesController();
    private final List<Perfil> Perfil;
    CallableStatement cts;
    Connection cn;
    ResultSet r;
    VistaUsuarios VistaUsuarios;
    
    
    public CUPUsuario() {
        setUndecorated(true);
        initComponents();
       
        
       cn = Conexion.getConn();
       
       
       txtCedula.setName("txtCedula");
       txtNombre.setName("txtNombre");
       txtLogin.setName("txtLogin");
       txtPassword.setName("txtPassword");
       BackFrame(txtCedula,txtNombre,txtLogin,txtPassword);
       
       obj = ControllerSql.getInstancia();
       
       /*cargar los datos del perfil en el combo*/
       comboPerfil.setModel(new javax.swing.DefaultComboBoxModel(cc.listaPerfil().toArray()));
       Perfil = cc.listaPerfil();
       comboPerfil.setSelectedIndex(0);
       
       /****************************/
       /*Oculta los combos de los profesores*/
       labelTipoC.setVisible(false);
       comboTipoC.setVisible(false);
       labelHabien.setVisible(false);
       comboHabien.setVisible(false);
       
       
       
       
       /***************************************/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        txtLogin = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        comboEstado = new javax.swing.JComboBox();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        comboPerfil = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        comboTipoC = new javax.swing.JComboBox();
        labelTipoC = new javax.swing.JLabel();
        labelHabien = new javax.swing.JLabel();
        comboHabien = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/minimizar.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cerrar2.png"))); // NOI18N
        jButton6.setText("jButton2");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Cedula");

        jLabel3.setText("Perfil");

        jLabel4.setText("Login");

        jLabel5.setText("Contrase√±a");

        jLabel6.setText("Estado");

        txtNombre.setName(""); // NOI18N
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        txtCedula.setName("p1"); // NOI18N
        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaFocusLost(evt);
            }
        });

        txtLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLoginFocusLost(evt);
            }
        });

        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "0" }));
        comboEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEstadoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        comboPerfil.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPerfilItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Crear Usuario");

        comboTipoC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Fijo", "Indefinido", "Temporal" }));

        labelTipoC.setText("Tipo de Contrato");

        labelHabien.setText("Habilitador en");

        comboHabien.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Diurna", "Nocturna" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(32, 32, 32)
                .addComponent(btnCancelar)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(171, 171, 171)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(txtNombre)
                                    .addComponent(txtLogin)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPassword)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(comboPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(132, 132, 132))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelHabien)
                                    .addComponent(labelTipoC))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboTipoC, 0, 129, Short.MAX_VALUE)
                            .addComponent(comboHabien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(comboPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTipoC)
                            .addComponent(comboTipoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboHabien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelHabien)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(20, 20, 20))
        );

        txtCedula.getAccessibleContext().setAccessibleName("prueba1");
        txtCedula.getAccessibleContext().setAccessibleDescription("prueba2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /*
    @Accion crear Usuario
    @Autor jose vanegas - jvanegas@ucentrla.edu.co
    */
    
    /*
    
CREATE TABLE `profesor` (
	`idprofesor` INT(11) NOT NULL AUTO_INCREMENT,
	`tipoContrato` VARCHAR(255) NULL DEFAULT NULL,
	`habilitadoEn` VARCHAR(255) NULL DEFAULT NULL,
	`estadoDispo` BIT(1) NULL DEFAULT NULL,
	PRIMARY KEY (`idprofesor`),
	CONSTRAINT `FK_Profesor_usuario` FOREIGN KEY (`idprofesor`) REFERENCES `usuario` (`idusuario`) ON UPDATE CASCADE ON DELETE CASCADE
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

    
    */
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
     
        VistaUsuarios VistaUsuarios = new VistaUsuarios();
        
        if((VistaUsuarios.getMod() != btnGuardar.getText()))
        {
       crearUsuario();
        }
        else{
       editarUsuario();
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void comboEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEstadoActionPerformed

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        // TODO add your handling code here:
        SaveJTextFieldFrame(txtNombre);
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusLost
       SaveJTextFieldFrame(txtCedula);
    }//GEN-LAST:event_txtCedulaFocusLost

    
/*cambiar el estado para que aparescan nueva infomracion*/   
    private void comboPerfilItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPerfilItemStateChanged
        
        esProfesor(0);
        
    }//GEN-LAST:event_comboPerfilItemStateChanged

    private void txtLoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLoginFocusLost
        // TODO add your handling code here
        SaveJTextFieldFrame(txtLogin);
    }//GEN-LAST:event_txtLoginFocusLost

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        // TODO add your handling code here:
        SaveJTextFieldFrame(txtPassword);
    }//GEN-LAST:event_txtPasswordFocusLost

    /*Funciones*/
    
    
    /*
    @Valida Campos vacios
    @auto jvanegasv@ucentral.edu.co
    */
    
      public boolean ValidarCamposVacios(JTextField... textFields) {
        for (JTextField textField : textFields) {
            if (textField.getText().isEmpty()) {
                return true;
            }
        }
        return false;
    }
 
      
      /*
      @Guardar los datos de cada JTextField para recuperar los datos
       en casos se caiga el servicio del servidor
      @autor jose vanegas - jvamegasv@ucentral.edu.co
      */
    public void SaveJTextFieldFrame(JTextField... textFields)
    {

        for (JTextField textField : textFields) {

            String b = textField.getName();

            String txtCampo = b;
            String txtdato = textField.getText();
            String nombreFrame = "CUPUsuario";

            try {

                obj = new ControllerSql();

                boolean res = obj.AgregarCampoBackFrame(1, nombreFrame, txtCampo, txtdato);

                if (res == true) {
                    log("Usuario Registrado Correctamente");

                } else {
                    
                    log("No se pudo ingresar un nuevo Empleado ya existe en la base"
                            + "de datos");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor");

            }

        }
   
    }
      
      
    /*
      @Retorna los datos recuperados en caso que se cierra la aplicacion
      @auto jose vanegas -jvanegasv@ucentral.edu.co
    */    
    public void BackFrame(JTextField... textFields) {
        String campos = "";
        try {

            ResultSet rs;
            rs = obj.ConsultarBackFrame();
            while (rs.next()) {
                campos = rs.getString(4);//Nombre
                //txtNombre.setText(rs.getString(5));//Nombre   
                //log(String.valueOf(campos));  
                for (JTextField textField : textFields) {

                    String b = textField.getName();

                    if (campos.equals(b)) {
                        textField.setText(rs.getString(5));
                    }
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(CUPUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
      
    public void deleteDataFrame(int idUsuario) {
        
        // TODO add your handling code here:
          String cod=  Integer.toString(idUsuario);
          String nombreFrame = "CUPUsuario";
          
          log("idUsuario"+String.valueOf(cod));
        try {
            cts=cn.prepareCall("{call eliminarbackframe(?,?)}");
            cts.setString(1, cod);
            cts.setString(2, nombreFrame);
            int rpta=cts.executeUpdate();

            if(rpta==1){
            
            
                
          log("No se eliminado correctamente los datos");
                    }else {
             
                log("Se ha eliminado correctamente los datos");

            }

        }catch (SQLException | HeadlessException e) {JOptionPane.showMessageDialog(this, e.toString());
        }
    }
    
    
    /*********************************************************************************************/
    
/*
@Crear usuario
@autor jose vanegas -jvanegasv@ucentral.edu.co    
*/    
    
public void crearUsuario()
{
 // TODO add your handling code here:

        if (ValidarCamposVacios(txtCedula, txtNombre, txtLogin, txtPassword)) {
            JOptionPane.showMessageDialog(this, "Faltan datos en los campos.");
        } else {

             int identificacion = Integer.parseInt(txtCedula.getText());
            String nombre = txtNombre.getText();
//            Object perfil = comboPerfil.getSelectedItem();
            int sperfil = ((Perfil) comboPerfil.getSelectedItem()).getIdPerfil();

            String login = txtLogin.getText();
            String contrasenia = txtPassword.getText();
            Object tipoEstado = comboEstado.getSelectedItem();
//            String sperfil = (String) perfil;
            String stipoEstado = (String) tipoEstado;
            
            Object tipoContrado = comboTipoC.getSelectedItem();
            Object habilitadoEn = comboHabien.getSelectedItem();
            
            String ab = (String) tipoContrado;
            String ac = (String) habilitadoEn;
            try {

//                 int intperfil = Integer.parseInt(sperfil);
                int intEstado = Integer.parseInt(stipoEstado);

                boolean res = obj.AgregarUsuario(identificacion, nombre, (int) sperfil, login, contrasenia,ab,ac,(int) intEstado,(int) intEstado);

                if (res == true) {
                    this.dispose();
                    VistaUsuarios = new VistaUsuarios();
                    VistaUsuarios.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Usuario Registrado Correctamente");

                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo ingresar otro usuario ya existe"
                            + "de datos");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor ");

            }

            deleteDataFrame(1);
        }

}

 public void editarUsuario()
 {
     
     log("Modificar cliente se llama correctamente");
       // TODO add your handling code here:
        if (ValidarCamposVacios(txtCedula,txtNombre,txtLogin,txtPassword)) {
            JOptionPane.showMessageDialog(this, "Faltan datos en los campos.");

        } else {
            
            // TODO add your handling code here:
            int identificacion = Integer.parseInt(txtCedula.getText());
            String nombre = txtNombre.getText();
            int sperfil = ((Perfil) comboPerfil.getSelectedItem()).getIdPerfil();
            String login = txtLogin.getText();
            String contrasenia = txtPassword.getText();
            Object tipoEstado = comboEstado.getSelectedItem();
            String stipoEstado = (String) tipoEstado;
            Object tipoContrado = comboTipoC.getSelectedItem();
            Object habilitadoEn = comboHabien.getSelectedItem();
            
            String ab = (String) tipoContrado;
            String ac = (String) habilitadoEn;

            try {
        
                
                obj = new ControllerSql();
               int intEstado = Integer.parseInt(stipoEstado);
                   
                      boolean res = obj.actualizarUsuario(identificacion,nombre, (int) sperfil, login, contrasenia,ab,ac,(int) intEstado,(int) intEstado);
//                      boolean res = obj.actualizarUsuario(identificacion,nombre);
                        log("EDITAR");
                  
                
                
                if (res == true) {
                    JOptionPane.showMessageDialog(null, "Se Modifico Correctamente el usario");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo Actualizar ocurrio un problema"
                            + "de datos");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor");

            }
        }
        
     
 }


public void crearProfesor()
{
//// // TODO add your handling code here:
////
////        if (ValidarCamposVacios(txtCedula, txtNombre, txtLogin, txtPassword)) {
////            JOptionPane.showMessageDialog(this, "Faltan datos en los campos.");
////        } else {
////
////            int identificacion = Integer.parseInt(txtCedula.getText());
////            String nombre = txtNombre.getText();
//////            Object perfil = comboPerfil.getSelectedItem();
////            int sperfil = ((Perfil) comboPerfil.getSelectedItem()).getIdPerfil();
////
////            String login = txtLogin.getText();
////            String contrasenia = txtPassword.getText();
////            Object tipoEstado = comboEstado.getSelectedItem();
//////            String sperfil = (String) perfil;
////            String stipoEstado = (String) tipoEstado;
////            
////            Object tipoContrado = comboTipoC.getSelectedItem();
////            Object habilitadoEn = comboHabien.getSelectedItem();
////            
////            String ab = (String) tipoContrado;
////            String ac = (String) habilitadoEn;
////            
////            try {
////
//////                 int intperfil = Integer.parseInt(sperfil);
////                int intEstado = Integer.parseInt(stipoEstado);
////
////               // boolean res = obj.AgregarUsuario(identificacion, nombre, (int) sperfil, login, contrasenia, (int) intEstado);
////                boolean res2 = obj.AgregarProfesor(identificacion,ab,ac,(int) intEstado);
////
////                if (res ==true) {
////                    JOptionPane.showMessageDialog(null, "Usuario Registrado Correctamente");
////                    if(res2 == true)
////                    {
////                        this.dispose();
////                    VistaUsuarios = new VistaUsuarios();
////                    VistaUsuarios.setVisible(true);
////                    JOptionPane.showMessageDialog(null, "Usuario Registrado Correctamente");
////                    }
////                    else {
////                    JOptionPane.showMessageDialog(null, "No se pudo ingresar otro usuario ya existe"
////                            + "de datos");
////                }
////
////                } else {
////                    JOptionPane.showMessageDialog(null, "No se pudo ingresar otro usuario ya existe"
////                            + "de datos");
////                }
////                
////            } catch (Exception e) {
////                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor ");
////
////            }
////
////            deleteDataFrame();
////        }
    
}


/*
@funcion que realiza en cambio de combos para que muestre las demas informacion
cuando se va a registar un profesor
@autor jose vanegas - jvanegasv@ucentral.edu.co
*/
public void esProfesor(int a)
{
// TODO add your handling code here:
        int sperfil = ((Perfil) comboPerfil.getSelectedItem()).getIdPerfil();
        
        if(sperfil != 3)
            {
       
       log("hola soy administrador");
       labelTipoC.setVisible(false);
       comboTipoC.setVisible(false);
       labelHabien.setVisible(false);
       comboHabien.setVisible(false);
       
                
            }
        else{
       log("hola soy profesor");
       labelTipoC.setVisible(true);
       comboTipoC.setVisible(true);
       labelHabien.setVisible(true);
       comboHabien.setVisible(true);
        
        }
        
    
    
}


    
      public void log(String a) {
        System.out.println("la valor  = " + " " + a);
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CUPUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CUPUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CUPUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CUPUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CUPUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnGuardar;
    public static javax.swing.JComboBox comboEstado;
    public static javax.swing.JComboBox comboHabien;
    public static javax.swing.JComboBox comboPerfil;
    public static javax.swing.JComboBox comboTipoC;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel labelHabien;
    private javax.swing.JLabel labelTipoC;
    public static javax.swing.JTextField txtCedula;
    public static javax.swing.JTextField txtLogin;
    public static javax.swing.JTextField txtNombre;
    public static javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
